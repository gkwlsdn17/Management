<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.project.DAO.InventoryMapper">
	<sql id="selectInventoryBaseSql">
		SELECT i.ino,
		i.name,
		i.code,
		i.count,
		l.name as lno,
		g.name as igno
		FROM inventory i LEFT JOIN location l ON i.lno = l.lno
		LEFT JOIN inventory_group g ON i.igno = g.igno
		
	</sql>
	<sql id="inventorySearchCondition">
    	<choose>
			<when test='option=="A"'>
				AND (i.name like concat('%',#{keyword},'%') 
				OR i.code like concat('%',#{keyword},'%') 
				OR g.name like concat('%',#{keyword},'%') )
			</when>
			<when test='option=="N"'>
				AND i.name like concat('%',#{keyword},'%')
			</when>
			<when test='option=="C"'>
				AND i.code like concat('%',#{keyword},'%') 
			</when>
			<when test='option=="R"'>
				AND g.name like concat('%',#{keyword},'%') 
			</when>
			<otherwise></otherwise>
		</choose>
    </sql>
    <sql id="InventorySort">
    	<choose>
			<when test='sort=="N"'>
				ORDER BY name
			</when>
			<when test='sort=="C"'>
				ORDER BY code
			</when>
			<when test='sort=="CNT"'>
				ORDER BY count
			</when>
			<when test='sort=="L"'>
				ORDER BY l.name
			</when>
			<when test='sort=="G"'>
				ORDER BY g.name
			</when>
			<otherwise>
				ORDER BY ino
			</otherwise>
		</choose>
		<choose>
			<when test='sortType=="ASC"'> ASC</when>
			<otherwise> DESC</otherwise>
		</choose>
    </sql>
    
    <select id="selectInventoryPage" parameterType="SearchCondition" resultType="Inventory">
		<include refid="selectInventoryBaseSql"></include>
		WHERE i.discard = 0
        <include refid="inventorySearchCondition"></include>
<!--ORDER BY ino DESC  -->
		<include refid="InventorySort"/>		
		LIMIT #{offset}, #{pageSize}
		;
	</select>
	
	<select id="count" parameterType = "SearchCondition" resultType="int">
        SELECT count(*)
        FROM inventory i LEFT JOIN location l ON i.lno = l.lno
		LEFT JOIN inventory_group g ON i.igno = g.igno
        WHERE i.discard = 0
        <include refid="inventorySearchCondition"></include>
        ;
    </select>
    
    <select id="selectInventory" resultType="Inventory">
    	<include refid="selectInventoryBaseSql"></include>
    	WHERE i.discard = 0
    	<!-- ORDER BY ino DESC;-->
    	<include refid="InventorySort"/>	
    </select>
    
    <select id="selectGoods" resultType="Goods">
		SELECT g.gno,
		i.name as gname,
		e.name as gmember,
		g.ggroup,
		g.gcount,
		g.gdate FROM goods g LEFT JOIN inventory i ON g.gname = i.ino
		LEFT JOIN employee e ON g.gmember = e.eno;
    </select>
    
    <insert id="insertInventory" parameterType="Inventory">
    	insert into inventory (name, code, count, lno, igno)
    	values (#{name}, #{code}, #{count}, #{lno}, #{igno});
    </insert>
    
    <insert id="insertGoods" parameterType="Goods">
    	insert into goods (gname, gmember, ggroup, gcount) 
    	values (#{gname}, #{gmember}, #{ggroup}, #{gcount});
    </insert>
	
	<select id="selectLocationAll" resultType="Location">
		select * from location order by name;
	</select>
	
	<select id="selectGroupAll" resultType="IGroup">
		select * from inventory_group order by name;
	</select>
	
	<insert id="locationInsert" parameterType="Location">
		insert into m00001.location(name) values(#{name});
	</insert>
	
	<insert id="IGroupInsert" parameterType="IGroup">
		insert into m00001.inventory_group(name) values(#{name});
	</insert>
	
	<select id="selectInventoryOne" parameterType="int" resultType="Inventory">
		<include refid="selectInventoryBaseSql"></include>
		where i.ino = #{ino}
	</select>
	
	<update id="updateInventory" parameterType="Inventory">
		update inventory
		set name=#{name}, code=#{code}, count=#{count}, lno=#{lno}, igno=#{igno}
		where ino=#{ino}
	</update>
	
	<!-- 
	<delete id="deleteInventory" parameterType="int">
		delete from inventory where ino=#{ino} 
	</delete>
	 -->
	 
	 <update id="deleteInventory" parameterType="int">
	 	update inventory set discard = 1 where ino = #{ino}
	 </update>
	
	<select id="selectLocation" resultType="Location">
		select * from Location order by name;
	</select>
	
	<select id="locationCount" parameterType="SearchCondition" resultType = "int">
		select count(*) from location
		where true
		<if test='keyword!=""'>
			AND name like concat('%',#{keyword},'%')
		</if>;
	</select>
	
	<select id="selectGroup" resultType="IGroup">
		select * from inventory_group order by name;
	</select>
	
	<select id="groupCount" parameterType="SearchCondition" resultType = "int">
		select count(*) from inventory_group
		where true
		<if test='keyword!=""'>
			AND name like concat('%',#{keyword},'%')
		</if>;
	</select>
	
	<update id="updateInventoryCount" parameterType="map">
		update inventory set count = count + #{amount} where ino = #{ino} and count + #{amount} > -1
	</update>
	
	<update id="goodsCountupdate" parameterType="Goods">
		<!--  update inventory set count = count + #{gcount} where ino = #{gname}; -->
		update inventory i SET i.count = i.count + 5 where exists (select gname from goods g where i.ino = g.gname);
	</update>
	
	<delete id="removeGoods" parameterType="int">
		DELETE FROM goods where gno = #{gno};
	</delete>
</mapper>