<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.project.DAO.EmployeeMapper">
	<select id="selectEmployee" parameterType="int" resultType="Employee">
		SELECT e.eno,
		e.name,
		e.number,
		t.name as team,
		p.name as position
		FROM employee e LEFT JOIN position p ON e.position = p.pno
		LEFT JOIN team t ON e.team = t.tno
		ORDER BY eno DESC;
	</select>
	
	<select id="selectEmployeePage" parameterType="map" resultType="Employee">
		SELECT e.eno,
		e.name,
		e.number,
		t.name as team,
		p.name as position
		FROM employee e LEFT JOIN position p ON e.position = p.pno
		LEFT JOIN team t ON e.team = t.tno
		ORDER BY eno DESC
		LIMIT #{offset}, #{pageSize}
		;
	</select>
	
	<select id="count" resultType="int">
        SELECT count(*) FROM employee;
    </select>
    
    <insert id="insertEmployee" parameterType="Employee">
		insert into employee (name, number, position, team)
		values (#{name}, #{number}, #{position}, #{team});
	</insert>
	
	<delete id="removeEmployee" parameterType="Employee">
		delete from employee where eno = #{EmployeeEno};
	</delete>
	
	<select id="selectTeamAll" resultType="Team">
		select * from Team order by name;
	</select>
	
	<select id="selectPositionAll" resultType="Position">
		select * from Position order by seq desc;
	</select>
	
	<select id="teamCount" resultType = "int">
		select count(*) from team;
	</select>
	
	<insert id="teamInsert" parameterType="Team">
		insert into team (name)
		values (#{name});
	</insert>
	
	<select id="selectTeam" parameterType="map" resultType="Team">
		select tno, name
		from team
		order by tno desc
		limit #{offset} , #{pageSize}
	</select>
	
	<sql id="teamMemberSearchCondition">
		<choose>
			<when test='option=="SEQ"'>
				AND e.position = #{keyword2}
			</when>
			<otherwise></otherwise>
		</choose>
	</sql>
	
	<select id="selectTeamMember" parameterType="SearchCondition" resultType="Employee">
		SELECT e.eno,
		e.name,
		e.number,
		p.name as position
		FROM employee e JOIN team t ON e.team = t.tno 
		LEFT JOIN position p ON e.position = p.pno
		WHERE t.tno = #{keyword}
		<include refid="teamMemberSearchCondition"/>
		ORDER BY eno DESC
		LIMIT #{offset}, #{pageSize}
	</select>
	
	<select id="selectTeamMemberCnt" parameterType="SearchCondition" resultType="int">
		SELECT count(*) 
		FROM employee e JOIN team t ON e.team = t.tno 
		LEFT JOIN position p ON e.position = p.pno
		WHERE t.tno = #{keyword}
		<include refid="teamMemberSearchCondition"/>
	</select>
	
</mapper>